{"version":3,"sources":["components/Header/Header.js","components/Wrapper/Wrapper.js","components/SearchForm/SearchForm.js","utils/API.js","components/EmployeeTable/EmployeeTable.js","components/Table/Table.js","components/Container/Container.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","id","Wrapper","props","children","SearchForm","onChange","letter","handleInputChange","value","name","type","placeholder","axios","get","EmployeeTable","alt","first","last","src","medium","phone","email","dob","date","split","Table","scope","data-key","onClick","sortBy","employees","map","key","login","uuid","picture","cell","Container","state","filteredEmployees","search","currentSort","event","setState","target","handleFilter","filter","employee","toLowerCase","includes","employeesCopy","sort","sortUp","getAttribute","sortDown","API","then","res","data","results","catch","err","console","log","a","b","afullName","bfullName","aDOB","bDOB","this","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.7ddda662.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.css\";\n\nfunction Header() {\n  return (\n    <div className=\"jumbotron jumbotron-fluid\" id=\"headerWrapper\">\n      <div className=\"container\">\n        <h1 className=\"display-4\">The Employee Directory</h1>\n        <p className=\"lead\">Find your people.</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./SearchForm.css\";\n\nfunction SearchForm(props) {\n  return (\n    <div className=\"container\" id=\"searchContainer\">\n      <div className=\"row\">\n        <div className=\"col-md-1 offset-md-4\">\n          <label className=\"label\">Search:</label>\n        </div>\n        <div className=\"col-md-4\">\n          <form>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                onChange={(letter) => props.handleInputChange(letter)}\n                value={props.value}\n                name=\"search\"\n                type=\"text\"\n                placeholder=\"enter search words\"\n                id=\"search\"\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SearchForm;\n","import axios from \"axios\";\nconst BASEURL = \"https://randomuser.me/api/?results=200&nat=au,gb\";\n\nexport default {\n  searchAll: function () {\n    return axios.get(BASEURL);\n  },\n};\n","import React from \"react\";\n\nfunction EmployeeTable(props) {\n  return (\n    <tbody>\n      <tr className=\"w-auto\" id={props.id}>\n        <td>\n          <img\n            alt={props.name.first + props.name.last}\n            src={props.src.medium}\n          />\n        </td>\n        <td>\n          {props.name.first} {props.name.last}\n        </td>\n        <td>{props.phone}</td>\n        <td>{props.email}</td>\n        <td>{props.dob.date.split(\"T\", 1)[0]}</td>\n      </tr>\n    </tbody>\n  );\n}\n\nexport default EmployeeTable;\n","import React from \"react\";\nimport \"./Table.css\";\nimport EmployeeTable from \"../EmployeeTable/EmployeeTable\";\n\nfunction Table(props) {\n  return (\n    <div className=\"table-responsive-sm tableWrapper\" id=\"tableWrapper\">\n      <table\n        className=\"table table-bordered table-hover table-sm\"\n        id=\"tableSort\"\n      >\n        <thead>\n          <tr className=\"w-auto table-danger\" id=\"tableTitleWrapper\">\n            <th scope=\"col\">Image</th>\n            <th scope=\"col\" data-key=\"name\" onClick={props.sortBy}>\n              Name\n            </th>\n            <th scope=\"col\" data-key=\"cell\" onClick={props.sortBy}>\n              Phone\n            </th>\n            <th scope=\"col\" data-key=\"email\" onClick={props.sortBy}>\n              Email\n            </th>\n            <th scope=\"col\" data-key=\"dob\" onClick={props.sortBy}>\n              DOB\n            </th>\n          </tr>\n        </thead>\n        {props.employees.map((employees) => (\n          <EmployeeTable\n            key={employees.login.uuid}\n            id={employees.login.uuid}\n            src={employees.picture}\n            name={employees.name}\n            email={employees.email}\n            phone={employees.cell}\n            dob={employees.dob}\n          />\n        ))}\n      </table>\n    </div>\n  );\n}\n\nexport default Table;\n","import React, { Component } from \"react\";\nimport Header from \"../Header/Header\";\nimport Wrapper from \"../Wrapper/Wrapper\";\nimport SearchForm from \"../SearchForm/SearchForm\";\nimport API from \"../../utils/API\";\nimport Table from \"../Table/Table\";\n\nclass Container extends Component {\n  state = {\n    employees: [],\n    filteredEmployees: [],\n    search: \"\",\n    currentSort: \"down\",\n  };\n\n  componentDidMount() {\n    API.searchAll()\n      .then((res) =>\n        this.setState({\n          employees: res.data.results,\n          filteredEmployees: res.data.results,\n        })\n      )\n      .catch((err) => console.log(err));\n  }\n\n  handleInputChange = (event) => {\n    this.setState({ search: event.target.value }, () => this.handleFilter());\n  };\n\n  handleFilter = () => {\n    let filteredEmployees = this.state.employees.filter((employee) => {\n      let fullName = (\n        employee.name.first +\n        \" \" +\n        employee.name.last\n      ).toLowerCase();\n      return fullName.includes(this.state.search);\n    });\n    this.setState({ filteredEmployees: filteredEmployees });\n  };\n\n  sortUp(key) {\n    if (key === \"name\") {\n      return function (a, b) {\n        let afullName = a.name.first + \" \" + a.name.last;\n        let bfullName = b.name.first + \" \" + b.name.last;\n        if (afullName < bfullName) return -1;\n        if (afullName > bfullName) return 1;\n        return 0;\n      };\n    }\n\n    if (key === \"dob\") {\n      return function (a, b) {\n        let aDOB = a.dob.date;\n        let bDOB = b.dob.date;\n        if (aDOB < bDOB) return -1;\n        if (aDOB > bDOB) return 1;\n        return 0;\n      };\n    }\n\n    return function (a, b) {\n      if (a[key] < b[key]) return -1;\n      if (a[key] > b[key]) return 1;\n      return 0;\n    };\n  }\n\n  sortDown(key) {\n    if (key === \"name\") {\n      return function (a, b) {\n        let afullName = a.name.first + \" \" + a.name.last;\n        let bfullName = b.name.first + \" \" + b.name.last;\n        if (afullName > bfullName) return -1;\n        if (afullName < bfullName) return 1;\n        return 0;\n      };\n    }\n\n    if (key === \"dob\") {\n      return function (a, b) {\n        let aDOB = a.dob.date;\n        let bDOB = b.dob.date;\n        if (aDOB > bDOB) return -1;\n        if (aDOB < bDOB) return 1;\n        return 0;\n      };\n    }\n\n    return function (a, b) {\n      if (a[key] > b[key]) return -1;\n      if (a[key] < b[key]) return 1;\n      return 0;\n    };\n  }\n\n  sortBy = (event) => {\n    const currentSort = this.state.currentSort;\n\n    if (currentSort === \"down\") {\n      let employeesCopy = [...this.state.filteredEmployees];\n      employeesCopy.sort(this.sortUp(event.target.getAttribute(\"data-key\")));\n      this.setState({ filteredEmployees: employeesCopy });\n      this.setState({ currentSort: \"up\" });\n    } else if (currentSort === \"up\") {\n      let employeesCopy = [...this.state.filteredEmployees];\n      employeesCopy.sort(this.sortDown(event.target.getAttribute(\"data-key\")));\n      this.setState({ filteredEmployees: employeesCopy });\n      this.setState({ currentSort: \"down\" });\n    }\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Header />\n        <SearchForm\n          value={this.state.search}\n          handleInputChange={this.handleInputChange}\n        />\n        <Table employees={this.state.filteredEmployees} sortBy={this.sortBy} />\n      </Wrapper>\n    );\n  }\n}\n\nexport default Container;\n","import React from \"react\";\nimport Container from \"./components/Container/Container\";\nimport \"./App.css\";\n\nconst App = () => <Container />;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}